#!/usr/bin/perl -w

=pod

=head NAME

import

=head DESCRIPTION

Script to import data from keynote via its API

=cut

use FindBin qw/$Bin/;
use lib "$Bin/../../lib";

use Getopt::Long;
use LWP;

use constant KEYNOTE_ACCT  => 226053;
use constant KEYNOTE_PASS  => 'E8WSWYBX';
use constant KEYNOTE_FEED  => 'http://datafeed.keynote.com/private/226053/trans/xml/latest';
use constant KEYNOTE_REALM => 'Restricted Files';

my ($file_id);
GetOptions('file-id|i=s' => \$file_id,
);

if (!$file_id) {
	($file_id) = @ARGV;
}

my @date = gmtime($file_id);
$date[5] += 1900;
$date[4]++;

my $file_name = sprintf('%04d%02d%02d_%02d%02d', @date[5,4,3,2,1]);
my $zip_file_name = $file_name.'.zip';

print "File ID $file_id maps to file $file_name.zip\n";
my $url = KEYNOTE_FEED.'/'.$zip_file_name;
print "Fetching URL $url\n";

my $data = fetch($url);
die "Did not receive zip file data\n" unless $data;

open(FH, '>', '/tmp/'.$zip_file_name) or die "Can't open '/tmp/$zip_file_name': $!\n";
print FH $$data;
close(FH);

chdir('/tmp') or die "Could not change to the '/tmp' directory: $!\n";
if (system("unzip $zip_file_name") != 0) {
	die "Could not unzip $zip_file_name\n";
}

my $xml_file_name = $file_name.'.xml';

print "Downloaded file with ID $file_id to '/tmp/$xml_file_name'\n";

sub fetch {
	my ($url) = @_;
	my ($is_ssl, $host) = $url =~ m!^http(s?)://([^/]+)!;
	my $port = $is_ssl ? '443' : '80';

	my $ua = LWP::UserAgent->new;
	$ua->agent("Wikia/0.1 ");
	$ua->credentials("$host:$port", KEYNOTE_REALM(), KEYNOTE_ACCT(), KEYNOTE_PASS());
	$ua->env_proxy;

	# Create a request
	my $req = HTTP::Request->new(GET => $url);

	# Pass request to the user agent and get a response back
	my $res = $ua->request($req);

	# Check the outcome of the response
	if ($res->is_success) {
		return \($res->content);
	} else {
		print STDERR "Fetch failed: ".$res->status_line."\n";
		return;
	}
}
