#!/usr/bin/perl
#
# check-disk  -  Make sure onedot processing is happening
#

use strict;
use warnings;

use Nagios::Plugin;
use Time::Local;

use constant LOG => '/etc/sv/onedot/log/main/current';

our ($PROGNAME) = $0 =~ m!([^/]+)$!;
our $VERSION = '1.0';
our $MAX_DELAY = 10;

my $np = Nagios::Plugin->new(
	usage     => "Usage: %s",
	version   => $VERSION,
	plugin    => $PROGNAME,
	shortname => uc($PROGNAME),
	blurb     => 'Make sure onedot processing is active',
	timeout   => 30,
);

# Determine if onedot is running
my $status = `sudo sv status onedot`;

$np->nagios_exit(CRITICAL, "Onedot processing is stopped") unless $status =~ /^run/;

# The last 'Processed' line should be within seconds of the current time
my $cmd = "tail -5 ".LOG()." | grep 'Processed' | tail -1";
my $last_line = `$cmd`;
my $now = time;

# Exit if we couldn't find a line
$np->nagios_exit('UKNOWN', "Could not determine if log is receiving traffic")
	unless $last_line;

# Grab the date from the log line
my ($Y, $M, $D, $h, $m, $s) = $last_line =~ /(\d{4})-(\d{2})-(\d{2})_(\d{2}):(\d{2}):(\d{2})/;

# Exit if we can't find the date in the line
$np->nagios_exit('UKNOWN', "Log line did not contain a recognizable date/time")
	unless $Y && $M && $D && $h && $m && $s;

my $secs = timelocal($s, $m, $h, $D, $M-1, $Y-1900);
my $delta = $now - $secs;

# Exit if the last line is too old
$np->nagios_exit('CRITICAL', "No traffic in over $MAX_DELAY seconds") if $delta > $MAX_DELAY;

$np->nagios_exit('OK', "Onedot processing OK");
