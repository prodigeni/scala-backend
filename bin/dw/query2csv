#!/usr/bin/perl -w

use strict;

use FindBin qw/$Bin/;
use lib "$Bin/../../lib";

use Getopt::Long;
use Pod::Usage;

use Wikia::DW::ETL::CSVWriter;
use Wikia::DW::ETL::Database;
use Wikia::DW::ETL::Query;

my $source = 'statsdb';
my $format = 'mysql';
my $outfile = '-';
my $noheader = 0;
my ($query, $queryfile, $transformer, $help) = undef;

GetOptions(
    'source=s'      => \$source,
    'query:s'       => \$query,
    'queryfile:s'   => \$queryfile,
    'transformer:s' => \$transformer,
    'format:s'      => \$format,
    'outfile:s'     => \$outfile,
    'noheader+'     => \$noheader,
    'help|?'        => \$help
) or pod2usage( 2 );

pod2usage( 1 ) if $help;

if (! defined $query) {
    if (! defined $queryfile) {
        pod2usage( 1 );
    }
    open SQL, "< $queryfile";
        my @sql = <SQL>;
    close SQL;
    $query = join("\n", @sql);
}

my $w = Wikia::DW::ETL::CSVWriter->new( filepath => $outfile,
                                        format   => $format,
                                        noheader => $noheader );

my $query_out;

if ($transformer) {
    # Load job class
    eval "use $transformer";
    if (my $err = $@) {
        die "Couldn't load $transformer module";
    }

    eval {
        $query_out = $transformer->new( processors => [ $w ] );
    };
    if (my $err = $@) {
        die "Couldn't instantiate $transformer class";
    }
} else {
    $query_out = $w;
}

my $q = Wikia::DW::ETL::Query->new( database   => Wikia::DW::ETL::Database->new( source => $source ),
                                    query      => $query,
                                    processors => [ $query_out ] );

$q->run;
$q->finalize;


##
sub usage {

}

1;
__END__

=head1 NAME

query2csv - export a query to MySQL loadable delimited CSV

=head1 SYNOPSIS

query2csv [options]

 Options:
 --source=<dbname>       database to run SQL against (statsdb, wikicities, etc)
 --query=<sql>           SQL SELECT statement
 --queryfile=<filename>  file containing the SQL SELECT statement
 --format=<format>       mysql or pg
 --outfile=<outfile>     output file to write to (defaults to STDOUT)
 --noheader              suppress CSV header in output
 --help                  display this usage text

Either --query or --queryfile must be specified.

=over 8

=head1 DESCRIPTION

B<This program> executes a SQL query against the source database and outputs CSV lines that are formatted for MySQL's LOAD DATA INFILE statement.
=cut

