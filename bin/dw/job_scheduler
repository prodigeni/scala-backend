#!/usr/bin/perl -w

use strict;

use FindBin qw/$Bin/;
use lib "$Bin/../../lib";

use Getopt::Long;
use Wikia::DW::Common;

my $queue;

GetOptions( 'queue:s' => \$queue );

my $db_job_schedules = Wikia::DW::Common::statsdb_arrayref(
   "SELECT j.*
      FROM statsdb_etl.etl_job_schedules js
      JOIN statsdb_etl.etl_jobs j
        ON j.job_id = js.job_id
       AND j.status = 'ENABLED'
     WHERE js.queue = '$queue'",
    'hash'
);

# Get a database connection for custom isolation and autocommit settings
my $statsdb_dbh = Wikia::DW::Common::statsdb;

$statsdb_dbh->do('SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED');
$statsdb_dbh->do('SET AUTOCOMMIT=1');

for my $schedule (@$db_job_schedules) {
    $statsdb_dbh->do(
       "INSERT IGNORE INTO statsdb_etl.etl_job_status (
            job_id,
            period_id,
            time_id,
            queue,
            status,
            worker_id,
            created_at,
            updated_at
        )
        SELECT js.job_id,
               js.period_id,
               pt.time_id,
               MAX(js.queue) AS queue,
               'WAITING'     AS status,
               null          AS worker_id,
               now()         AS created_at,
               now()         AS updated_at
          FROM statsdb_etl.etl_job_schedules js
          JOIN statsdb_etl.etl_period_times pt USE INDEX (period_time)
            ON pt.period_id = js.period_id
           AND pt.time_id  >= js.begin_time
           AND pt.time_id  <  LEAST(DATE_SUB(now(), INTERVAL js.lag MINUTE), js.end_time)
          LEFT JOIN statsdb_etl.etl_job_status job_status 
            ON job_status.job_id    = js.job_id
           AND job_status.period_id = js.period_id
           AND job_status.time_id   = pt.time_id
          LEFT JOIN statsdb_etl.etl_job_dependencies dep 
            ON dep.job_id = js.job_id
          LEFT JOIN statsdb_etl.etl_job_status dep_status
            ON dep_status.job_id = dep.depends_job_id
           AND dep_status.period_id = js.period_id
           AND dep_status.time_id   = pt.time_id
         WHERE js.job_id = $schedule->{job_id}
           AND job_status.job_id IS NULL
         GROUP BY js.job_id,
                  js.period_id,
                  pt.time_id
        HAVING COUNT(dep.depends_job_id) = COUNT(CASE WHEN dep_status.status = 'COMPLETED' THEN 1 ELSE null END)"
    );
}

$statsdb_dbh->disconnect;

