#!/usr/bin/perl -w

use strict;

use FindBin qw/$Bin/;
use lib "$Bin/../../lib";

use Getopt::Long;
use IPC::Open3;
use Wikia::DW::Common;
use Wikia::DW::Event::FileParser;

my $source;   # event, special, view, or api
my $days = 7; # days to attempt reprocessing prior missed load files
my $begin;
my $reprocess = 0;

GetOptions( 'source=s'  => \$source,
            'days:i'    => \$days,
            'begin:s'   => \$begin,
            'reprocess' => \$reprocess );

Wikia::DW::Common::log("Running loadevents for $source...");
Wikia::DW::Common::exit_if_running(with => "--source +$source");
    
## Find unloaded files and load them
Wikia::DW::Common::log('  loading S3 filelist from database');

my $start_date = "DATE_SUB(now(), INTERVAL $days DAY)";

if ($begin) {
    $start_date = "TIMESTAMP('$begin')";
}

my $s3_files = Wikia::DW::Common::statsdb_arrayref(
   "SELECT s3.file AS s3_file
      FROM (
            SELECT epoch_time_id AS file_id,
                   CONCAT(DATE_FORMAT(time_id, '$source/%Y/%m/%d/$source.log-%H-%i.'), epoch_time_id, '.gz') AS file
              FROM statsdb_etl.etl_period_times pt
             WHERE pt.period_id = 15
               AND pt.time_id BETWEEN $start_date
                                  AND now()
           ) s3
      LEFT JOIN statsdb_etl.etl_files f
        ON s3.file = f.s3_file
     WHERE (f.s3_file IS NULL OR $reprocess > 0)
     ORDER BY s3.file_id",
    'hash'
);

my $parser = new Wikia::DW::Event::FileParser;

foreach my $file (@$s3_files) {
    $parser->run( s3file => $file->{'s3_file'} );
}

